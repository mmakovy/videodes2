/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package videolibrary;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.JOptionPane;

/**
 * Represents genre selection dialog
 *
 * @author Andrej
 */
public class GenreDialog extends javax.swing.JDialog {

    List<Genre> genres = new ArrayList<Genre>();

    /**
     * Creates new form GenreDialog
     */
    public GenreDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public List<Genre> getGenres() {
        return Collections.unmodifiableList(genres);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ActionCB = new javax.swing.JCheckBox();
        AdventureCB = new javax.swing.JCheckBox();
        AnimationCB = new javax.swing.JCheckBox();
        BiographyCB = new javax.swing.JCheckBox();
        ComedyCB = new javax.swing.JCheckBox();
        CrimeCB = new javax.swing.JCheckBox();
        DocumentaryCB = new javax.swing.JCheckBox();
        DramaCB = new javax.swing.JCheckBox();
        FamilyCB = new javax.swing.JCheckBox();
        FantasyCB = new javax.swing.JCheckBox();
        HistoryCB = new javax.swing.JCheckBox();
        HorrorCB = new javax.swing.JCheckBox();
        MusicCB = new javax.swing.JCheckBox();
        MusicalCB = new javax.swing.JCheckBox();
        MysteryCB = new javax.swing.JCheckBox();
        RomanceCB = new javax.swing.JCheckBox();
        ScifiCB = new javax.swing.JCheckBox();
        SportCB = new javax.swing.JCheckBox();
        ThrillerCB = new javax.swing.JCheckBox();
        WarCB = new javax.swing.JCheckBox();
        WesternCB = new javax.swing.JCheckBox();
        OkButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Select genre(s)");

        ActionCB.setText("Action");

        AdventureCB.setText("Adventure");

        AnimationCB.setText("Animation");

        BiographyCB.setText("Biography");

        ComedyCB.setText("Comedy");

        CrimeCB.setText("Crime");

        DocumentaryCB.setText("Documentary");

        DramaCB.setText("Drama");

        FamilyCB.setText("Family");

        FantasyCB.setText("Fantasy");

        HistoryCB.setText("History");

        HorrorCB.setText("Horror");

        MusicCB.setText("Music");

        MusicalCB.setText("Musical");

        MysteryCB.setText("Mystery");

        RomanceCB.setText("Romance");

        ScifiCB.setText("Sci-fi");

        SportCB.setText("Sport");

        ThrillerCB.setText("Thriller");

        WarCB.setText("War");

        WesternCB.setText("Western");

        OkButton.setText("OK");
        OkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkButtonActionPerformed(evt);
            }
        });

        CancelButton.setText("Cancel");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BiographyCB)
                    .addComponent(ActionCB)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DocumentaryCB)
                            .addComponent(FantasyCB)
                            .addComponent(MusicCB)
                            .addComponent(RomanceCB)
                            .addComponent(ThrillerCB)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(OkButton)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(WarCB)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(77, 77, 77)
                                        .addComponent(WesternCB))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(CancelButton))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AdventureCB)
                                    .addComponent(ComedyCB)
                                    .addComponent(DramaCB)
                                    .addComponent(HistoryCB)
                                    .addComponent(MusicalCB)
                                    .addComponent(ScifiCB))
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SportCB)
                                    .addComponent(MysteryCB)
                                    .addComponent(HorrorCB)
                                    .addComponent(FamilyCB)
                                    .addComponent(CrimeCB)
                                    .addComponent(AnimationCB))))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ActionCB)
                    .addComponent(AdventureCB)
                    .addComponent(AnimationCB))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BiographyCB)
                    .addComponent(ComedyCB)
                    .addComponent(CrimeCB))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DocumentaryCB)
                    .addComponent(DramaCB)
                    .addComponent(FamilyCB))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FantasyCB)
                    .addComponent(HistoryCB)
                    .addComponent(HorrorCB))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MusicCB)
                    .addComponent(MusicalCB)
                    .addComponent(MysteryCB))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RomanceCB)
                    .addComponent(ScifiCB)
                    .addComponent(SportCB))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ThrillerCB)
                    .addComponent(WarCB)
                    .addComponent(WesternCB))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OkButton)
                    .addComponent(CancelButton))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkButtonActionPerformed
        boolean checked = false;
        /*
         * add selected genres into list
         */
        if (ActionCB.isSelected()) {
            checked = true;
            genres.add(Genre.ACTION);
        }
        if (AdventureCB.isSelected()) {
            checked = true;
            genres.add(Genre.ADVENTURE);
        }
        if (AnimationCB.isSelected()) {
            checked = true;
            genres.add(Genre.ANIMATION);
        }
        if (BiographyCB.isSelected()) {
            checked = true;
            genres.add(Genre.BIOGRAPHY);
        }
        if (ComedyCB.isSelected()) {
            checked = true;
            genres.add(Genre.COMEDY);
        }
        if (CrimeCB.isSelected()) {
            checked = true;
            genres.add(Genre.CRIME);
        }
        if (DocumentaryCB.isSelected()) {
            checked = true;
            genres.add(Genre.DOCUMENTARY);
        }
        if (DramaCB.isSelected()) {
            checked = true;
            genres.add(Genre.DRAMA);
        }
        if (FamilyCB.isSelected()) {
            checked = true;
            genres.add(Genre.FAMILY);
        }
        if (FantasyCB.isSelected()) {
            checked = true;
            genres.add(Genre.FANTASY);
        }
        if (HistoryCB.isSelected()) {
            checked = true;
            genres.add(Genre.HISTORY);
        }
        if (HorrorCB.isSelected()) {
            checked = true;
            genres.add(Genre.HORROR);
        }
        if (MusicCB.isSelected()) {
            checked = true;
            genres.add(Genre.MUSIC);
        }
        if (MusicalCB.isSelected()) {
            checked = true;
            genres.add(Genre.MUSICAL);
        }
        if (MysteryCB.isSelected()) {
            checked = true;
            genres.add(Genre.MYSTERY);
        }
        if (RomanceCB.isSelected()) {
            checked = true;
            genres.add(Genre.ROMANCE);
        }
        if (ScifiCB.isSelected()) {
            checked = true;
            genres.add(Genre.SCIENCE_FICTION);
        }
        if (SportCB.isSelected()) {
            checked = true;
            genres.add(Genre.SPORT);
        }
        if (ThrillerCB.isSelected()) {
            checked = true;
            genres.add(Genre.THRILLER);
        }
        if (WarCB.isSelected()) {
            checked = true;
            genres.add(Genre.WAR);
        }
        if (WesternCB.isSelected()) {
            checked = true;
            genres.add(Genre.WESTERN);
        }
        /*
         * if no genres selected
         */
        if (!checked) {
            JOptionPane.showMessageDialog(this, "No genres selected", "No genres", JOptionPane.ERROR_MESSAGE);
        } else {
            this.dispose();
        };
    }//GEN-LAST:event_OkButtonActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        genres = null;
        this.dispose();
    }//GEN-LAST:event_CancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GenreDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GenreDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GenreDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GenreDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                GenreDialog dialog = new GenreDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ActionCB;
    private javax.swing.JCheckBox AdventureCB;
    private javax.swing.JCheckBox AnimationCB;
    private javax.swing.JCheckBox BiographyCB;
    private javax.swing.JButton CancelButton;
    private javax.swing.JCheckBox ComedyCB;
    private javax.swing.JCheckBox CrimeCB;
    private javax.swing.JCheckBox DocumentaryCB;
    private javax.swing.JCheckBox DramaCB;
    private javax.swing.JCheckBox FamilyCB;
    private javax.swing.JCheckBox FantasyCB;
    private javax.swing.JCheckBox HistoryCB;
    private javax.swing.JCheckBox HorrorCB;
    private javax.swing.JCheckBox MusicCB;
    private javax.swing.JCheckBox MusicalCB;
    private javax.swing.JCheckBox MysteryCB;
    private javax.swing.JButton OkButton;
    private javax.swing.JCheckBox RomanceCB;
    private javax.swing.JCheckBox ScifiCB;
    private javax.swing.JCheckBox SportCB;
    private javax.swing.JCheckBox ThrillerCB;
    private javax.swing.JCheckBox WarCB;
    private javax.swing.JCheckBox WesternCB;
    // End of variables declaration//GEN-END:variables
}
